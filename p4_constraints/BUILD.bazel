load("@rules_cc//cc:cc_library.bzl", "cc_library")
load("@rules_cc//cc:cc_test.bzl", "cc_test")
load("@rules_cc//cc:defs.bzl", "cc_proto_library")
# GOOGLE ONLY (DO NOT REMOVE): load("//third_party/protobuf/bazel:proto_library.bzl", "proto_library")

load("@rules_proto//proto:defs.bzl", "proto_library")

package(
    default_visibility = ["//visibility:public"],
    licenses = ["notice"],  # Apache 2.0
)

cc_library(
    name = "ast",
    srcs = ["ast.cc"],
    hdrs = ["ast.h"],
    deps = [
        ":ast_cc_proto",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/meta:type_traits",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:status",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_library(
    name = "constraint_source",
    hdrs = ["constraint_source.h"],
    deps = [":ast_cc_proto"],
)

cc_test(
    name = "ast_test",
    size = "small",
    srcs = ["ast_test.cc"],
    deps = [
        ":ast",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
        "@com_google_gutil//gutil:status_matchers",
        "@com_google_gutil//gutil:testing",
    ],
)

proto_library(
    name = "ast_proto",
    srcs = ["ast.proto"],
)

cc_proto_library(
    name = "ast_cc_proto",
    deps = [":ast_proto"],
)

cc_library(
    name = "quote",
    srcs = ["quote.cc"],
    hdrs = ["quote.h"],
    deps = [
        ":ast",
        ":ast_cc_proto",
        ":constraint_source",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:status",
    ],
)

cc_library(
    name = "ret_check",
    srcs = ["ret_check.cc"],
    hdrs = ["ret_check.h"],
    deps = [
        ":source_location",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/status",
        "@com_google_gutil//gutil:status",
    ],
)

cc_library(
    name = "source_location",
    hdrs = ["source_location.h"],
)
